{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-aria-label","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","aria-label","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","vote_average","release_date","color","text","prototype","PropTypes","array","bool","isRequired","string","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Header","header","Item","li","current","SLink","Link","List","ul","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","original_title","original_name","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","object","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed76dfb9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ])\n  };\n  \n  export default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (<Container><span role=\"img\" aria-aria-label=\"Loading\">Loading</span></Container>);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n            bgUrl={\n              imageUrl\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                : require(\"../assets/noPosterSmall.png\").default\n            }\n          />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n        <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>(\n    <> \n    <Helmet>\n    <title>영화 | Sflix</title>\n    </Helmet>\n    {loading ? (<Loader /> ) : (\n        <Container>\n            <Helmet>\n                <title>영화 | Sflix</title>\n            </Helmet>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                />           \n               ))}\n            </Section>\n          )}\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n                {upcoming.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                />            \n              ))}        \n              </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n              {popular.map(movie => (\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                />\n                ))}        \n              </Section>\n          )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n        )}\n    </>\n);\n\n\nHomePresenter.prototype = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"c91c323d11cf9afaff1790067c669e7b\",\n        language: \"ko-KR\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id =>\n      api.get(`movie/${id}`, {\n        params: {\n          append_to_response: \"videos\"\n        }\n      }),\n    search: term =>\n      api.get(\"search/movie\", {\n        params: {\n          query: encodeURIComponent(term)\n        }\n      })\n  };\n\n  export const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};","import HomeContainer from \"./HomeContainer\";\n\nexport  default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n          const {\n            data: { results: nowPlaying }\n          } = await moviesApi.nowPlaying();\n          const {\n            data: { results: upcoming }\n          } = await moviesApi.upcoming();\n          const {\n            data: { results: popular }\n          } = await moviesApi.popular();\n          this.setState({\n            nowPlaying,\n            upcoming,\n            popular\n          });\n        } catch {\n          this.setState({\n            error: \"Can't find movies information.\"\n          });\n        } finally {\n          this.setState({\n            loading: false\n          });\n        }\n      }\n    \n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n        <HomePresenter\n            nowPlaying={nowPlaying}\n            upcoming={upcoming}\n            popular={popular}\n            error={error}\n            loading={loading}\n        />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error }) => (\n    <> \n        <Helmet>\n            <title>TV | Sflix</title>\n        </Helmet>\n    {loading ? ( \n        <Loader /> \n        ) : (\n        <Container>\n    {topRated && topRated.length > 0 && (\n    <Section title=\"Top Rated Shows\">\n        {topRated.map(show => (\n              <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n             ))}\n        </Section>\n        )}\n    {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map(show => (\n              <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n             ))}\n        </Section>\n        )}\n    {airingToday && airingToday.length > 0 && (\n    <Section title=\"airingToday Shows\">\n        {airingToday.map(show => (\n              <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n        ))}        \n    </Section>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container>\n         )}\n    </>\n);\n\nTVPresenter.prototype = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount(){\n    try{\n      const {data: {results: topRated}} = await tvApi.topRated();\n      const {data: {results: popular}} = await tvApi.popular();\n      const {data: {results: airingToday}} = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      })\n    } catch{\n      this.setState({\n        error: \"Can't find movies informaiton,\"\n    })\n    } finally{\n      this.setState({\n        loading:false\n    });    }\n}\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}","import React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname ===\" /\"}>\n                <SLink to=\"/\">영화</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">검색</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n        <title>검색 | Sflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n             />           \n             ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n            />           \n          ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&  movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n                </>\n    )}\n  </Container>\n);\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Sflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n        <Helmet>\n            <title>\n                {result.title ? result.title : result.name}{\" \"}\n                | Sflix\n            </title>\n        </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\").default\n          }\n        />\n               <Data>\n          <Title>\n            {result.title\n              ? result.title\n              : result.name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.prototype = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n          location: { pathname }\n        } = props;\n        this.state = {\n          result: null,\n          error: null,\n          loading: true,\n          isMovie: pathname.includes(\"/movie/\")\n        };\n      }\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n         ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n  </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}